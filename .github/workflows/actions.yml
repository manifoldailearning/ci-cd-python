name: Build, Push to ECR, and Deploy to EC2

on:
  push:
    branches:
      - main  # Or your desired branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Or your preferred runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t my-mlapp .  # Replace with your image name

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your actual region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to Amazon ECR
        run: |
          docker tag my-mlapp:latest ${{ steps.login-ecr.outputs.registry }}/my-mlapp:latest  # Replace with your ECR repo
          docker push ${{ steps.login-ecr.outputs.registry }}/my-mlapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensure the image is built and pushed before deploying

    steps:
      - name: Add EC2 host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Pull image from ECR and deploy with docker-compose (using DOCKER_HOST)
        env:
          DOCKER_HOST: ssh://${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}
        run: |
          # Update the image name in docker-compose.yml to pull from ECR
          sed -i "s/your-image-name/${{ steps.login-ecr.outputs.registry }}\/your-ecr-repository-name/g" docker-compose.yml
          docker-compose pull
          docker-compose up -d