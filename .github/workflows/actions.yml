name: Build, Test, and Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: '3.10' 

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Build Docker Image
        run: docker build -t my-mlapp:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Push image to Amazon ECR
        run: |
          docker tag my-mlapp:latest ${{ steps.login-ecr.outputs.registry }}/my-mlapp:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/my-mlapp:latest

      - name: Add EC2 host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Login to EC2
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          before_connect: |
            mkdir -p ~/.ssh
            echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

      - name: Copy docker-compose.yml
        run: |
          ssh -vvv ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo 'Testing SSH connection'" # Add this line for debugging
          scp docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/

      # - name: Copy docker-compose.yml
      #   run: scp docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/

      - name: Pull image from ECR and deploy with docker-compose
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            cd /home/${{ secrets.EC2_USERNAME }}/
            # Update the image name in docker-compose.yml to pull from ECR
            sed -i "s/my-mlapp/${{ steps.login-ecr.outputs.registry }}\/your-ecr-repository-name/g" docker-compose.yml
            docker-compose pull
            docker-compose up -d
          '